{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/example-branch-operator","result":{"data":{"post":{"__typename":"MdxPost","slug":"/example-branch-operator","title":"example_branch_operator","date":"26.04.2021","tags":[{"name":"airflow","slug":"airflow"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"example_branch_operator\",\n  \"date\": \"2021-04-26T00:00:00.000Z\",\n  \"tags\": [\"airflow\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"example_branch_operator\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"#\\n# Licensed to the Apache Software Foundation (ASF) under one\\n# or more contributor license agreements.  See the NOTICE file\\n# distributed with this work for additional information\\n# regarding copyright ownership.  The ASF licenses this file\\n# to you under the Apache License, Version 2.0 (the\\n# \\\"License\\\"); you may not use this file except in compliance\\n# with the License.  You may obtain a copy of the License at\\n#\\n#   http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing,\\n# software distributed under the License is distributed on an\\n# \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n# KIND, either express or implied.  See the License for the\\n# specific language governing permissions and limitations\\n# under the License.\\n\\n\\\"\\\"\\\"Example DAG demonstrating the usage of the BranchPythonOperator.\\\"\\\"\\\"\\n\\nimport random\\n\\nfrom airflow import DAG\\nfrom airflow.operators.dummy import DummyOperator\\nfrom airflow.operators.python import BranchPythonOperator\\nfrom airflow.utils.dates import days_ago\\n\\nargs = {\\n    'owner': 'airflow',\\n}\\n\\ndag = DAG(\\n    dag_id='example_branch_operator',\\n    default_args=args,\\n    start_date=days_ago(2),\\n    schedule_interval=\\\"@daily\\\",\\n    tags=['example', 'example2'],\\n)\\n\\nrun_this_first = DummyOperator(\\n    task_id='run_this_first',\\n    dag=dag,\\n)\\n\\noptions = ['branch_a', 'branch_b', 'branch_c', 'branch_d']\\n\\nbranching = BranchPythonOperator(\\n    task_id='branching',\\n    python_callable=lambda: random.choice(options),\\n    dag=dag,\\n)\\nrun_this_first >> branching\\n\\njoin = DummyOperator(\\n    task_id='join',\\n    trigger_rule='none_failed_or_skipped',\\n    dag=dag,\\n)\\n\\nfor option in options:\\n    t = DummyOperator(\\n        task_id=option,\\n        dag=dag,\\n    )\\n\\n    dummy_follow = DummyOperator(\\n        task_id='follow_' + option,\\n        dag=dag,\\n    )\\n\\n    branching >> t >> dummy_follow >> join\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"example_branch_operator","timeToRead":1,"banner":null}},"pageContext":{"slug":"/example-branch-operator","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}