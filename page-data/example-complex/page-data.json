{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/example-complex","result":{"data":{"post":{"__typename":"MdxPost","slug":"/example-complex","title":"example_complex","date":"26.04.2021","tags":[{"name":"airflow","slug":"airflow"}],"description":null,"canonicalUrl":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"example_complex\",\n  \"date\": \"2021-04-26T00:00:00.000Z\",\n  \"tags\": [\"airflow\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"example_complex\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-python\"\n  }, \"#\\n# Licensed to the Apache Software Foundation (ASF) under one\\n# or more contributor license agreements.  See the NOTICE file\\n# distributed with this work for additional information\\n# regarding copyright ownership.  The ASF licenses this file\\n# to you under the Apache License, Version 2.0 (the\\n# \\\"License\\\"); you may not use this file except in compliance\\n# with the License.  You may obtain a copy of the License at\\n#\\n#   http://www.apache.org/licenses/LICENSE-2.0\\n#\\n# Unless required by applicable law or agreed to in writing,\\n# software distributed under the License is distributed on an\\n# \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\\n# KIND, either express or implied.  See the License for the\\n# specific language governing permissions and limitations\\n# under the License.\\n\\n\\\"\\\"\\\"\\nExample Airflow DAG that shows the complex DAG structure.\\n\\\"\\\"\\\"\\n\\nfrom airflow import models\\nfrom airflow.models.baseoperator import chain\\nfrom airflow.operators.bash import BashOperator\\nfrom airflow.operators.python import PythonOperator\\nfrom airflow.utils.dates import days_ago\\n\\nwith models.DAG(\\n    dag_id=\\\"example_complex\\\",\\n    schedule_interval=None,\\n    start_date=days_ago(1),\\n    tags=['example', 'example2', 'example3'],\\n) as dag:\\n\\n    # Create\\n    create_entry_group = BashOperator(task_id=\\\"create_entry_group\\\", bash_command=\\\"echo create_entry_group\\\")\\n\\n    create_entry_group_result = BashOperator(\\n        task_id=\\\"create_entry_group_result\\\", bash_command=\\\"echo create_entry_group_result\\\"\\n    )\\n\\n    create_entry_group_result2 = BashOperator(\\n        task_id=\\\"create_entry_group_result2\\\", bash_command=\\\"echo create_entry_group_result2\\\"\\n    )\\n\\n    create_entry_gcs = BashOperator(task_id=\\\"create_entry_gcs\\\", bash_command=\\\"echo create_entry_gcs\\\")\\n\\n    create_entry_gcs_result = BashOperator(\\n        task_id=\\\"create_entry_gcs_result\\\", bash_command=\\\"echo create_entry_gcs_result\\\"\\n    )\\n\\n    create_entry_gcs_result2 = BashOperator(\\n        task_id=\\\"create_entry_gcs_result2\\\", bash_command=\\\"echo create_entry_gcs_result2\\\"\\n    )\\n\\n    create_tag = BashOperator(task_id=\\\"create_tag\\\", bash_command=\\\"echo create_tag\\\")\\n\\n    create_tag_result = BashOperator(task_id=\\\"create_tag_result\\\", bash_command=\\\"echo create_tag_result\\\")\\n\\n    create_tag_result2 = BashOperator(task_id=\\\"create_tag_result2\\\", bash_command=\\\"echo create_tag_result2\\\")\\n\\n    create_tag_template = BashOperator(task_id=\\\"create_tag_template\\\", bash_command=\\\"echo create_tag_template\\\")\\n\\n    create_tag_template_result = BashOperator(\\n        task_id=\\\"create_tag_template_result\\\", bash_command=\\\"echo create_tag_template_result\\\"\\n    )\\n\\n    create_tag_template_result2 = BashOperator(\\n        task_id=\\\"create_tag_template_result2\\\", bash_command=\\\"echo create_tag_template_result2\\\"\\n    )\\n\\n    create_tag_template_field = BashOperator(\\n        task_id=\\\"create_tag_template_field\\\", bash_command=\\\"echo create_tag_template_field\\\"\\n    )\\n\\n    create_tag_template_field_result = BashOperator(\\n        task_id=\\\"create_tag_template_field_result\\\", bash_command=\\\"echo create_tag_template_field_result\\\"\\n    )\\n\\n    create_tag_template_field_result2 = BashOperator(\\n        task_id=\\\"create_tag_template_field_result2\\\", bash_command=\\\"echo create_tag_template_field_result\\\"\\n    )\\n\\n    # Delete\\n    delete_entry = BashOperator(task_id=\\\"delete_entry\\\", bash_command=\\\"echo delete_entry\\\")\\n    create_entry_gcs >> delete_entry\\n\\n    delete_entry_group = BashOperator(task_id=\\\"delete_entry_group\\\", bash_command=\\\"echo delete_entry_group\\\")\\n    create_entry_group >> delete_entry_group\\n\\n    delete_tag = BashOperator(task_id=\\\"delete_tag\\\", bash_command=\\\"echo delete_tag\\\")\\n    create_tag >> delete_tag\\n\\n    delete_tag_template_field = BashOperator(\\n        task_id=\\\"delete_tag_template_field\\\", bash_command=\\\"echo delete_tag_template_field\\\"\\n    )\\n\\n    delete_tag_template = BashOperator(task_id=\\\"delete_tag_template\\\", bash_command=\\\"echo delete_tag_template\\\")\\n\\n    # Get\\n    get_entry_group = BashOperator(task_id=\\\"get_entry_group\\\", bash_command=\\\"echo get_entry_group\\\")\\n\\n    get_entry_group_result = BashOperator(\\n        task_id=\\\"get_entry_group_result\\\", bash_command=\\\"echo get_entry_group_result\\\"\\n    )\\n\\n    get_entry = BashOperator(task_id=\\\"get_entry\\\", bash_command=\\\"echo get_entry\\\")\\n\\n    get_entry_result = BashOperator(task_id=\\\"get_entry_result\\\", bash_command=\\\"echo get_entry_result\\\")\\n\\n    get_tag_template = BashOperator(task_id=\\\"get_tag_template\\\", bash_command=\\\"echo get_tag_template\\\")\\n\\n    get_tag_template_result = BashOperator(\\n        task_id=\\\"get_tag_template_result\\\", bash_command=\\\"echo get_tag_template_result\\\"\\n    )\\n\\n    # List\\n    list_tags = BashOperator(task_id=\\\"list_tags\\\", bash_command=\\\"echo list_tags\\\")\\n\\n    list_tags_result = BashOperator(task_id=\\\"list_tags_result\\\", bash_command=\\\"echo list_tags_result\\\")\\n\\n    # Lookup\\n    lookup_entry = BashOperator(task_id=\\\"lookup_entry\\\", bash_command=\\\"echo lookup_entry\\\")\\n\\n    lookup_entry_result = BashOperator(task_id=\\\"lookup_entry_result\\\", bash_command=\\\"echo lookup_entry_result\\\")\\n\\n    # Rename\\n    rename_tag_template_field = BashOperator(\\n        task_id=\\\"rename_tag_template_field\\\", bash_command=\\\"echo rename_tag_template_field\\\"\\n    )\\n\\n    # Search\\n    search_catalog = PythonOperator(task_id=\\\"search_catalog\\\", python_callable=lambda: print(\\\"search_catalog\\\"))\\n\\n    search_catalog_result = BashOperator(\\n        task_id=\\\"search_catalog_result\\\", bash_command=\\\"echo search_catalog_result\\\"\\n    )\\n\\n    # Update\\n    update_entry = BashOperator(task_id=\\\"update_entry\\\", bash_command=\\\"echo update_entry\\\")\\n\\n    update_tag = BashOperator(task_id=\\\"update_tag\\\", bash_command=\\\"echo update_tag\\\")\\n\\n    update_tag_template = BashOperator(task_id=\\\"update_tag_template\\\", bash_command=\\\"echo update_tag_template\\\")\\n\\n    update_tag_template_field = BashOperator(\\n        task_id=\\\"update_tag_template_field\\\", bash_command=\\\"echo update_tag_template_field\\\"\\n    )\\n\\n    # Create\\n    create_tasks = [\\n        create_entry_group,\\n        create_entry_gcs,\\n        create_tag_template,\\n        create_tag_template_field,\\n        create_tag,\\n    ]\\n    chain(*create_tasks)\\n\\n    create_entry_group >> delete_entry_group\\n    create_entry_group >> create_entry_group_result\\n    create_entry_group >> create_entry_group_result2\\n\\n    create_entry_gcs >> delete_entry\\n    create_entry_gcs >> create_entry_gcs_result\\n    create_entry_gcs >> create_entry_gcs_result2\\n\\n    create_tag_template >> delete_tag_template_field\\n    create_tag_template >> create_tag_template_result\\n    create_tag_template >> create_tag_template_result2\\n\\n    create_tag_template_field >> delete_tag_template_field\\n    create_tag_template_field >> create_tag_template_field_result\\n    create_tag_template_field >> create_tag_template_field_result2\\n\\n    create_tag >> delete_tag\\n    create_tag >> create_tag_result\\n    create_tag >> create_tag_result2\\n\\n    # Delete\\n    delete_tasks = [\\n        delete_tag,\\n        delete_tag_template_field,\\n        delete_tag_template,\\n        delete_entry_group,\\n        delete_entry,\\n    ]\\n    chain(*delete_tasks)\\n\\n    # Get\\n    create_tag_template >> get_tag_template >> delete_tag_template\\n    get_tag_template >> get_tag_template_result\\n\\n    create_entry_gcs >> get_entry >> delete_entry\\n    get_entry >> get_entry_result\\n\\n    create_entry_group >> get_entry_group >> delete_entry_group\\n    get_entry_group >> get_entry_group_result\\n\\n    # List\\n    create_tag >> list_tags >> delete_tag\\n    list_tags >> list_tags_result\\n\\n    # Lookup\\n    create_entry_gcs >> lookup_entry >> delete_entry\\n    lookup_entry >> lookup_entry_result\\n\\n    # Rename\\n    create_tag_template_field >> rename_tag_template_field >> delete_tag_template_field\\n\\n    # Search\\n    chain(create_tasks, search_catalog, delete_tasks)\\n    search_catalog >> search_catalog_result\\n\\n    # Update\\n    create_entry_gcs >> update_entry >> delete_entry\\n    create_tag >> update_tag >> delete_tag\\n    create_tag_template >> update_tag_template >> delete_tag_template\\n    create_tag_template_field >> update_tag_template_field >> rename_tag_template_field\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"example_complex","timeToRead":1,"banner":null}},"pageContext":{"slug":"/example-complex","formatString":"DD.MM.YYYY"}},"staticQueryHashes":["3090400250","3090400250","318001574"]}